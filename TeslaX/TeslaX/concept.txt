Concept.

WindowsForms for UI.
On launch show a form; controls:
 - a way to pick one of 4 diagonal directions, setting (dir)
 - start button

On button click:
 ~ take a screenshot of the game window
 ~ open a borderless slave form with same size as screenshot
 ~ dock a picturebox to the form
  - onmousedown: capture x1,y1
  - onmousemove: if x1,y1 are captured, draw rectangle between x1,y1 and mouse
  - onmouseup: capture x2,y2, close the form
 ~ capture bitmap of selected area
 ~ find (offset) using [offset predicate]
 ~ using (offset), check all eligible rows for player using [player predicate]
 ~ set (lk) to player's position and begin the work cycle

"try for (offset)"
 ~ take pictures until (offset) is found using [offset predicate]

Work cycle:
 ~ find (position) by searching for 
 ~ try for (offset)
 ~ seek for player to the left/right /* depending on dir */ of (lk) using [player predicate]
 ~ record position to (lk)
 ~ seek nearest blocks using (offset) and [block predicate]; suppose there might be a [halt condition]
  ~ on [halt condition] stop the cycle, perform halting routine /* walk to the door, enter, wait */ and restart work cycle
 ~ using (distance) found in last step and (speed) figured out somehow /* HOW? */ decide whether to keep walking
  // to maintain humanlikeness, we choose to minizime input rather than allow 10 mouse events per second
 ~ since exit condition hasn't been reached, repeat

Halting procedure:
Unspecified, will or will not rely on screen output.
Will use a [continue predicate] to decide whether to reinitiate work cycle or go idle.
If work cycle is reinitiated, player seeker is ran first to find player position.

Player seeker:
 ~ try for (offset)
 ~ pick the first (y) that's not higher/lower than (lk.y), depending on (dir)
 ~ check row (y) for player using [player predicate], starting from horizontal edge depending on (dir)
 ~ put found (x,y) to (lk) and begin work cycle

Most of the working code is put into a separate class for extensibility.
Tried implementing a extension class hierarchy, it was functional too messy to maintain.